/*!
	Colorbox v1.5.10 - 2014-06-26
	jQuery lightbox and modal window plugin
	(c) 2014 Jack Moore - http://www.jacklmoore.com/colorbox
	license: http://www.opensource.org/licenses/mit-license.php
*/
(function (P, m, ad) { var R = { html: false, photo: false, iframe: false, inline: false, transition: "elastic", speed: 300, fadeOut: 300, width: false, initialWidth: "600", innerWidth: false, maxWidth: false, height: false, initialHeight: "450", innerHeight: false, maxHeight: false, scalePhotos: true, scrolling: true, opacity: 0.3, preloading: true, className: false, overlayClose: false, escKey: true, arrowKey: true, confirmKey: true, top: false, bottom: false, left: false, right: false, fixed: false, data: undefined, closeButton: true, fastIframe: true, open: false, reposition: true, loop: true, xScroll: false, slideshow: false, slideshowAuto: true, slideshowSpeed: 2500, slideshowStart: "start slideshow", slideshowStop: "stop slideshow", photoRegex: /\.(gif|png|jp(e|g|eg)|bmp|ico|webp|jxr|svg)((#|\?).*)?$/i, retinaImage: false, retinaUrl: false, retinaSuffix: "@2x.$1", current: "image {current} of {total}", previous: "previous", next: "next", close: "close", confirm: "confirm", xhrError: "This content failed to load.", imgError: "This image failed to load.", returnFocus: true, trapFocus: true, onOpen: false, onLoad: false, onComplete: false, onCleanup: false, onClosed: false, onConfirm: false, showBottom: false, showConfirm: true, rel: function () { return this.rel }, href: function () { return P(this).attr("href") }, title: function () { return this.title } }, y = "colorbox", Z = "cbox", t = Z + "Element", ac = Z + "_open", f = Z + "_load", aa = Z + "_complete", x = Z + "_cleanup", aj = Z + "_closed", ao = Z + "_confirm", j = Z + "_purge", X, an, ap, d, N, r, b, W, c, ah, U, l, i, q, w, ae, v, Y, A, M, e, D, K = P("<a/>"), al, aq, o, h, a, O, p, F, af, T, B, S, ak = "div", I = 0, ag = {}, ai; function L(ar, aw, au, av) { var at = m.createElement(ar); if (aw) { at.id = Z + aw } if (au) { at.style.cssText = au } if (av) { at.className = av } return P(at) } function u() { return ad.innerHeight ? ad.innerHeight : P(ad).height() } function C(at, ar) { if (ar !== Object(ar)) { ar = {} } this.cache = {}; this.el = at; this.value = function (au) { var av; if (this.cache[au] === undefined) { av = P(this.el).attr("data-cbox-" + au); if (av !== undefined) { this.cache[au] = av } else { if (ar[au] !== undefined) { this.cache[au] = ar[au] } else { if (R[au] !== undefined) { this.cache[au] = R[au] } } } } return this.cache[au] }; this.get = function (au) { var av = this.value(au); return P.isFunction(av) ? av.call(this.el, this) : av } } function H(at) { var ar = c.length, au = (O + at) % ar; return (au < 0) ? ar + au : au } function V(ar, at) { return Math.round((/%/.test(ar) ? ((at === "x" ? ah.width() : u()) / 100) : 1) * parseInt(ar, 10)) } function E(at, ar) { return at.get("photo") || at.get("photoRegex").test(ar) } function G(at, ar) { return at.get("retinaUrl") && ad.devicePixelRatio > 1 ? ar.replace(at.get("photoRegex"), at.get("retinaSuffix")) : ar } function am(ar) { if ("contains" in an[0] && !an[0].contains(ar.target) && ar.target !== X[0]) { ar.stopPropagation(); an.focus() } } function n(ar) { if (n.str !== ar) { an.add(X).removeClass(n.str).addClass(ar); n.str = ar } } function Q(ar) { O = 0; if (ar && ar !== false && ar !== "nofollow") { c = P("." + t).filter(function () { var at = P.data(this, y); var au = new C(this, at); return (au.get("rel") === ar) }); O = c.index(al.el); if (O === -1) { c = c.add(al.el); O = c.length - 1 } } else { c = P(al.el) } } function J(ar) { P(m).trigger(ar); K.triggerHandler(ar) } var z = (function () { var at, aw = Z + "Slideshow_", aA = "click." + Z, ay; function au() { clearTimeout(ay) } function az() { if (al.get("loop") || c[O + 1]) { au(); ay = setTimeout(S.next, al.get("slideshowSpeed")) } } function ar() { ae.html(al.get("slideshowStop")).unbind(aA).one(aA, ax); K.bind(aa, az).bind(f, au); an.removeClass(aw + "off").addClass(aw + "on") } function ax() { au(); K.unbind(aa, az).unbind(f, au); ae.html(al.get("slideshowStart")).unbind(aA).one(aA, function () { S.next(); ar() }); an.removeClass(aw + "on").addClass(aw + "off") } function av() { at = false; ae.hide(); au(); K.unbind(aa, az).unbind(f, au); an.removeClass(aw + "off " + aw + "on") } return function () { if (at) { if (!al.get("slideshow")) { K.unbind(x, av); av() } } else { if (al.get("slideshow") && c[1]) { at = true; K.one(x, av); if (al.get("slideshowAuto")) { ar() } else { ax() } ae.show() } } } }()); function g(at) { var ar; if (!T) { ar = P(at).data(y); al = new C(at, ar); Q(al.get("rel")); if (!F) { M = P('<a href="#" class="btn btn-success colorbox-bottom-btn">' + al.get("confirm") + "</a>").attr({ id: Z + "Confirm" }); A = P('<a href="#" class="btn btn-success colorbox-bottom-btn">' + al.get("close") + "</a>").attr({ id: Z + "Close" }); if (al.get("showBottom")) { W.html("").addClass("cboxBottomCenter").removeClass("cboxBottomCenterPro"); W.append(A); if (al.get("showConfirm")) { W.append(M) } M.click(function () { S.confirm() }); A.click(function () { S.close() }) } else { if (S.IsIE6()) { W.html("").addClass("cboxBottomCenter").removeClass("cboxBottomCenterPro") } else { W.html("").addClass("cboxBottomCenterPro").removeClass("cboxBottomCenter") } } F = af = true; n(al.get("className")); an.css({ visibility: "hidden", display: "block", opacity: "" }); U = L(ak, "LoadedContent", "width:0; height:0; overflow:hidden; visibility:hidden"); d.css({ width: "", height: "" }).append(U); aq = N.height() + W.height() + d.outerHeight(true) - d.height(); o = r.width() + b.width() + d.outerWidth(true) - d.width(); h = U.outerHeight(true); a = U.outerWidth(true); var ax = V(al.get("initialWidth"), "x"); var au = V(al.get("initialHeight"), "y"); var aw = al.get("maxWidth"); var av = al.get("maxHeight"); al.w = (aw !== false ? Math.min(ax, V(aw, "x")) : ax) - a - o; al.h = (av !== false ? Math.min(au, V(av, "y")) : au) - h - aq; U.css({ width: "", height: al.h }); S.position(); J(ac); al.get("onOpen"); an.focus(); if (al.get("trapFocus")) { if (m.addEventListener) { m.addEventListener("focus", am, true); K.one(aj, function () { m.removeEventListener("focus", am, true) }); K.one(ao, function () { m.removeEventListener("focus", am, true) }) } } if (al.get("returnFocus")) { K.one(aj, function () { P(al.el).focus() }); K.one(ao, function () { P(al.el).focus() }) } } if (S.IsIE6()) { X.css({ height: P(m).height(), filter: "Alpha(opacity = " + R.opacity * 100 + ")" }).show(); P("select").hide() } else { X.css({ height: P(m).height(), opacity: parseFloat(al.get("opacity")) || "", cursor: al.get("overlayClose") ? "pointer" : "", visibility: "visible" }).show() } ab() } } function s() { if (!an && m.body) { ai = false; ah = P(ad); an = L(ak).attr({ id: y, "class": P.support.opacity === false ? Z + "IE" : "", role: "dialog", tabindex: "-1" }).hide(); X = L(ak, "Overlay").hide(); i = P([L(ak, "LoadingOverlay")[0], L(ak, "LoadingGraphic")[0]]); ap = L(ak, "Wrapper"); d = L(ak, "Content").append(w = L(ak, "Current"), Y = P('<button type="button"/>').attr({ id: Z + "Previous" }), v = P('<button type="button"/>').attr({ id: Z + "Next" }), ae = L("button", "Slideshow"), i); M = P('<a href="#" class="btn btn-success colorbox-bottom-btn">' + R.confirm + "</a>").attr({ id: Z + "Confirm" }); A = P('<a href="#" class="btn btn-success colorbox-bottom-btn">' + R.close + "</a>").attr({ id: Z + "Close" }); e = P('<a href="#" class="colorboxBg topClose"></a>').attr({ id: Z + "TopClose" }); W = L(ak, "BottomCenter", null, "cboxBottomCenter"); ap.append(L(ak).append(L(ak, "TopLeft"), N = L(ak, "TopCenter").append(q = L("span", "TopTitle"), e), L(ak, "TopRight")), L(ak, false, "clear:left").append(r = L(ak, "MiddleLeft"), d, b = L(ak, "MiddleRight")), L(ak, false, "clear:left").append(L(ak, "BottomLeft"), W, L(ak, "BottomRight"))).find("div div").css({ "float": "left" }); l = L(ak, false, "position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;"); D = v.add(Y).add(w).add(ae); P(m.body).append(X, an.append(ap, l)) } } function k() { function ar(at) { if (!(at.which > 1 || at.shiftKey || at.altKey || at.metaKey || at.ctrlKey)) { at.preventDefault(); g(this) } } if (an) { if (!ai) { ai = true; v.click(function () { S.next() }); Y.click(function () { S.prev() }); M.click(function () { S.confirm() }); A.click(function () { S.close() }); e.click(function () { S.close() }); X.click(function () { if (al.get("overlayClose")) { S.close() } }); P(m).bind("keydown." + Z, function (au) { var at = au.keyCode; if (F && al.get("escKey") && at === 27) { au.preventDefault(); S.close() } if (F && al.get("arrowKey") && c[1] && !au.altKey) { if (at === 37) { au.preventDefault(); Y.click() } else { if (at === 39) { au.preventDefault(); v.click() } } } if (F && al.get("confirmKey") && at === 13) { if (al.get("showBottom")) { if (al.get("showConfirm")) { au.preventDefault(); S.confirm() } else { au.preventDefault(); S.close() } } } }); if (P.isFunction(P.fn.on)) { P(m).on("click." + Z, "." + t, ar) } else { P("." + t).live("click." + Z, ar) } } return true } return false } if (P[y]) { return } S = P.fn[y] = P[y] = function (ar, av) { var at; var au = this; ar = ar || {}; if (P.isFunction(au)) { au = P("<a/>"); ar.open = true } else { if (!au[0]) { return au } } if (!au[0]) { return au } s(); if (k()) { if (av) { ar.onComplete = av } au.each(function () { var aw = P.data(this, y) || {}; P.data(this, y, P.extend(aw, ar)) }).addClass(t); at = new C(au[0], ar); if (at.get("open")) { g(au[0]) } } return au }; S.position = function (au, aw) { var az, aB = 0, at = 0, ax = an.offset(), ar, av; ah.unbind("resize." + Z); an.css({ top: -90000, left: -90000 }); ar = ah.scrollTop(); av = ah.scrollLeft(); if (al.get("fixed")) { ax.top -= ar; ax.left -= av; an.css({ position: "fixed" }) } else { aB = ar; at = av; an.css({ position: "absolute" }) } if (al.get("right") !== false) { at += Math.max(ah.width() - al.w - a - o - V(al.get("right"), "x"), 0) } else { if (al.get("left") !== false) { at += V(al.get("left"), "x") } else { at += Math.round(Math.max(ah.width() - al.w - a - o, 0) / 2) } } if (al.get("bottom") !== false) { aB += Math.max(u() - al.h - h - aq - V(al.get("bottom"), "y"), 0) } else { if (al.get("top") !== false) { aB += V(al.get("top"), "y") } else { aB += Math.round(Math.max(u() - al.h - h - aq, 0) / 2) } } an.css({ top: ax.top, left: ax.left, visibility: "visible" }); ap[0].style.width = ap[0].style.height = "9999px"; function aA() { try { N[0].style.width = W[0].style.width = d[0].style.width = (parseInt(an[0].style.width, 10) - o) + "px"; d[0].style.height = r[0].style.height = b[0].style.height = (parseInt(an[0].style.height, 10) - aq) + "px" } catch (aC) { } } az = { width: al.w + a + o, height: al.h + h + aq, top: aB, left: at }; if (au) { var ay = 0; P.each(az, function (aC) { if (az[aC] !== ag[aC]) { ay = au; return } }); au = ay } ag = az; if (!au) { an.css(az) } an.dequeue().animate(az, { duration: au || 0, complete: function () { aA(); af = false; ap[0].style.width = (al.w + a + o) + "px"; ap[0].style.height = (al.h + h + aq) + "px"; if (al.get("reposition")) { setTimeout(function () { ah.bind("resize." + Z, S.position) }, 1) } if (aw) { aw() } }, step: aA }) }; S.resize = function (at) { var ar; if (F) { at = at || {}; if (at.width) { al.w = V(at.width, "x") - a - o } if (at.innerWidth) { al.w = V(at.innerWidth, "x") } U.css({ width: al.w }); if (at.height) { al.h = V(at.height, "y") - h - aq } if (at.innerHeight) { al.h = V(at.innerHeight, "y") } if (!at.innerHeight && !at.height) { ar = U.scrollTop(); U.css({ height: "auto" }); al.h = U.height() } U.css({ height: al.h }); if (ar) { U.scrollTop(ar) } S.position(al.get("transition") === "none" ? 0 : al.get("speed")) } }; S.prep = function (at) { if (!F) { return } var aw, au = al.get("transition") === "none" ? 0 : al.get("speed"); U.remove(); U = L(ak, "LoadedContent").append(at); function ar() { al.w = al.w || U.width(); al.w = al.mw && al.mw < al.w ? al.mw : al.w; return al.w } function av() { al.h = al.h || U.height(); al.h = al.mh && al.mh < al.h ? al.mh : al.h; return al.h } U.hide().appendTo(l.show()).css({ width: ar(), overflow: al.get("scrolling") ? "auto" : "hidden" }).css({ height: av() }).prependTo(d); l.hide(); P(p).css({ "float": "none" }); n(al.get("className")); aw = function () { var az = c.length, ay, ax; if (!F) { return } function aA() { if (P.support.opacity === false) { an[0].style.removeAttribute("filter") } } ax = function () { clearTimeout(B); i.hide(); J(aa); al.get("onComplete") }; q.html(al.get("title")); U.show(); if (az > 1) { if (typeof al.get("current") === "string") { w.html(al.get("current").replace("{current}", O + 1).replace("{total}", az)).show() } v[(al.get("loop") || O < az - 1) ? "show" : "hide"]().html(al.get("next")); Y[(al.get("loop") || O) ? "show" : "hide"]().html(al.get("previous")); z(); if (al.get("preloading")) { P.each([H(-1), H(1)], function () { var aB, aC = c[this], aD = new C(aC, P.data(aC, y)), aE = aD.get("href"); if (aE && E(aD, aE)) { aE = G(aD, aE); aB = m.createElement("img"); aB.src = aE } }) } } else { D.hide() } if (al.get("iframe")) { ay = m.createElement("iframe"); if ("frameBorder" in ay) { ay.frameBorder = 0 } if ("allowTransparency" in ay) { ay.allowTransparency = "true" } if (!al.get("scrolling")) { ay.scrolling = "no" } if (S.IsIE6() && !al.get("xScroll")) { P(ay).attr({ style: "overflow-x:hidden", scrolling: "yes" }) } P(ay).attr({ src: al.get("href"), name: (new Date()).getTime(), "class": Z + "Iframe", allowFullScreen: true }).one("load", ax).appendTo(U); K.one(j, function () { ay.src = "//about:blank" }); if (al.get("fastIframe")) { P(ay).trigger("load") } } else { ax() } if (al.get("transition") === "fade") { an.fadeTo(au, 1, aA) } else { aA() } }; if (al.get("transition") === "fade") { an.fadeTo(au, 0, function () { S.position(0, aw) }) } else { S.position(au, aw) } }; function ab() { var av, aw, au = S.prep, at, ax = ++I; af = true; p = false; J(j); J(f); al.get("onLoad"); al.h = al.get("height") ? V(al.get("height"), "y") - h - aq : al.get("innerHeight") && V(al.get("innerHeight"), "y"); al.w = al.get("width") ? V(al.get("width"), "x") - a - o : al.get("innerWidth") && V(al.get("innerWidth"), "x"); al.mw = al.w; al.mh = al.h; if (al.get("maxWidth")) { al.mw = V(al.get("maxWidth"), "x") - a - o; al.mw = al.w && al.w < al.mw ? al.w : al.mw } if (al.get("maxHeight")) { al.mh = V(al.get("maxHeight"), "y") - h - aq; al.mh = al.h && al.h < al.mh ? al.h : al.mh } av = al.get("href"); B = setTimeout(function () { i.show() }, 100); if (al.get("inline")) { var ar = P(av); at = P("<div>").hide().insertBefore(ar); K.one(j, function () { at.replaceWith(ar) }); au(ar) } else { if (al.get("iframe")) { au(" ") } else { if (al.get("html")) { au(al.get("html")) } else { if (E(al, av)) { av = G(al, av); p = new Image(); P(p).addClass(Z + "Photo").bind("error", function () { au(L(ak, "Error").html(al.get("imgError"))) }).one("load", function () { if (ax !== I) { return } setTimeout(function () { var ay; P.each(["alt", "longdesc", "aria-describedby"], function (aA, aB) { var az = P(al.el).attr(aB) || P(al.el).attr("data-" + aB); if (az) { p.setAttribute(aB, az) } }); if (al.get("retinaImage") && ad.devicePixelRatio > 1) { p.height = p.height / ad.devicePixelRatio; p.width = p.width / ad.devicePixelRatio } if (al.get("scalePhotos")) { aw = function () { p.height -= p.height * ay; p.width -= p.width * ay }; if (al.mw && p.width > al.mw) { ay = (p.width - al.mw) / p.width; aw() } if (al.mh && p.height > al.mh) { ay = (p.height - al.mh) / p.height; aw() } } if (al.h) { p.style.marginTop = Math.max(al.mh - p.height, 0) / 2 + "px" } if (c[1] && (al.get("loop") || c[O + 1])) { p.style.cursor = "pointer"; p.onclick = function () { S.next() } } p.style.width = p.width + "px"; p.style.height = p.height + "px"; au(p) }, 1) }); p.src = av } else { if (av) { l.load(av, al.get("data"), function (az, ay) { if (ax === I) { au(ay === "error" ? L(ak, "Error").html(al.get("xhrError")) : P(this).contents()) } }) } } } } } } S.next = function () { if (!af && c[1] && (al.get("loop") || c[O + 1])) { O = H(1); g(c[O]) } }; S.prev = function () { if (!af && c[1] && (al.get("loop") || O)) { O = H(-1); g(c[O]) } }; S.close = function () { if (F && !T) { T = true; F = false; J(x); al.get("onCleanup"); ah.unbind("." + Z); if (S.IsIE6()) { P("select").show(); an.hide(); X.hide(); J(j); U.remove(); setTimeout(function () { T = false; J(aj); al.get("onClosed") }, 1) } else { X.fadeTo(al.get("fadeOut") || 0, 0); an.stop().fadeTo(al.get("fadeOut") || 0, 0, function () { an.hide(); X.hide(); J(j); U.remove(); setTimeout(function () { T = false; J(aj); al.get("onClosed") }, 1) }) } } }; S.confirm = function () { if (F && !T) { T = true; F = false; J(x); al.get("onCleanup"); ah.unbind("." + Z); if (S.IsIE6()) { P("select").show(); an.hide(); X.hide(); J(j); U.remove(); setTimeout(function () { T = false; J(ao); al.get("onConfirm") }, 1) } else { X.fadeTo(al.get("fadeOut") || 0, 0); an.stop().fadeTo(al.get("fadeOut") || 0, 0, function () { an.hide(); X.hide(); J(j); U.remove(); setTimeout(function () { T = false; J(ao); al.get("onConfirm") }, 1) }) } } }; S.remove = function () { if (!an) { return } an.stop(); P[y].close(); an.stop(false, true).remove(); X.remove(); T = false; an = null; P("." + t).removeData(y).removeClass(t); P(m).unbind("click." + Z).unbind("keydown." + Z) }; S.element = function () { return P(al.el) }; S.settings = R; S.IsIE6 = function () { return ad.navigator.userAgent.toLowerCase().indexOf("msie 6") > -1 } }(jQuery, document, window)); XXY = window.XXY || {}; XXY.ColorBox = XXY.ColorBox || {}; (function (b, a) { b.Alert = function (d, i, f, g, e, h, c) { d = !d ? "success" : d; a(function () { a.colorbox({ html: "<div class='cboxDialogLeft colorboxBg cboxicon" + d + "'></div><div class='cboxDialogRight'>" + f + "</div>", width: "380", height: "220", title: i, showBottom: true, onConfirm: g, showConfirm: e, confirm: h ? h : "确定", close: c ? c : "关闭" }) }) }; b.Page = function (h, g, e, c, d, f) { a(function () { a("#" + h).colorbox({ iframe: true, width: e, height: c, title: g, href: d, showBottom: false, onClosed: f }) }) }; b.AutoPage = function (g, e, c, d, f) { a(function () { a.colorbox({ iframe: true, width: e, height: c, title: g, href: d, showBottom: false, onClosed: f }) }) }; b.Common = function (c) { a(function () { a("#" + c.id).colorbox(c) }) }; b.AutoCommon = function (c) { a(function () { a.colorbox(c) }) } })(XXY.ColorBox, jQuery);
